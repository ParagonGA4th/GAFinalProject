#pragma once
#include "AssetTextureType.h"
#include "../ParagonData/ParagonDefines.h"

#include <string>
#include <array>
#include <vector>

/// <summary>
/// FBX ???ο? ???????? ??? ????ĸ? ???? ???????. 
/// ????? ???빰?? ??? ???? ???. ????????? Texture?? ???? ???,
/// ???빰?? ??u???.
/// 
/// ???? ????? Material?? ????!
/// </summary>

struct ID3D11ShaderResourceView;

namespace Pg::Graphics
{
	class RenderTexture2D;
	namespace Helper
	{
		class AssimpBufferParser;
	}
}

namespace Pg::Graphics
{
	class MaterialCluster
	{
		friend class Pg::Graphics::Helper::AssimpBufferParser;

	public:
		MaterialCluster();
		//AssetTextureType?? ?????? ?????? RenderTexture2D?? ??????.
		RenderTexture2D* GetTextureByType(eAssetTextureType type);

		//??????? Path?? ??? Type???? ??? Map?? ??? ?? ??? ????? ???? ???.

	private:
		//AssetTextureType의 인덱스와 1대1 대응할 것. 
		std::array<RenderTexture2D*, Pg::Defines::ASSET_MAXIMUM_TEXTURE_PROP_CNT> _atsList;

		////디버그용, 실제로 유의미하게 쓰이지는 않을 것.
		//std::array<std::pair<eAssetTextureType, bool>, Pg::Defines::ASSET_MAXIMUM_TEXTURE_PROP_CNT> _debugList;
		//eSizeTexture _size = _512x512;
	};
}


